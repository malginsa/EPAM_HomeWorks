
    ФИО
    Укажите Ваши фамилию, имя и отчество
Мальгин Сергей Александрович

    Какова разница между абстрактным классом и интерфейсом?
Абстрактный класс - класс, в котором есть хотя бы один абстрактный метод -- метод, который объявлен но не определён. Наследник должен определить тело метда. Наследовать можно только один Абстрактный класс. В Интерфейсе методы только объявляются, но не определяются. Класс, который реализует Интерфейс обязан определить все методы Интерфейсаса. Класс может реализовать несколько Интерфейсов, но наследовать только один [Абстрактный] класс. В Абстрактном классе могут быть не только абстрактные методы. Абстракный класс может иметь модификатор доступа, а Интерфейс публичен.

    Как «насильно» вызвать сборку мусора?
System.gc() посылает сообщение VM с сообщением-просьбой собрать мусор. VM не гарантирует немедленно начать процесс сборки мусора.

    Когда требуется явное приведение классов?
Чтобы появился доступ к полям и методам того класса, к которому происходит приведение.
При приведении типов обязательны родственные связи приводимого и исходного типа объекта.

    Чем конструкторы отличаются от других методов?
У любого класса есть констуктор (К). Если ни один К не определён явно, то в классе присутствует К по-умолчанию. Если определён явно хотя бы один, то неявного несуществует. Из одного К можно обращаться к другому К через this(...)  К. не возвращает значений. К. не бывает статичкским.

    Можно ли вызывать конструкторы один из другого, если их в классе несколько?
Можно, но только в первой строке: this(...)

    В чем разница между JDK и JRE?
JDK - Java Development Kit -- набор для разработчика. В набор входит:
компилятор в байт-код, набор стандартных классов  collections, concurrent ,JRE, утилиты jstack, jvisualvm
JRE - Java Run-time Environment -- Среда для запуска приложений скомпилированных из исходников java в байт-код. Интерпретатор бай-кода java, набор стандартных классов для данной платформы.

    Имеет ли значение в каком порядке перехватывать исключения FileNotFoundException и IOExceptipon?
Имеет. 
catch (FileNotFoundException e) {
    ...
} catch (IOExceptipon e){
    ...
}
Если указать другой порядок, то программа никогда не выполнит блок в catcкоторый (FileNotFoundException e) { ... }
FileNotFoundException является потомком IOExceptipon. Т.е. сначала указывается потомок, потом родитель.

    Могут ли внутренние классы, описанные внутри метода, иметь доступ к локальным переменным этого метода?
При создании экземпляра внутреннего класса, создаются копии локальных переменных метода, к которым он обращается. Изменять их не может. такие переменные объявляются final.
Время жизни локальной переменной ограничено телом метода. Время жизни экземпляра внутреннего класса, описанного внутри метода, не ограничено телом метода. 

    Как подкласс может обратиться к методу или конструктору из суперкласса?
Для конструктора -- super(...) и только в первой строке
Для метода -- super.myMethod(...) в любом месте 


    В чем разница между очередью и стеком?
Очередь - FIFO - структура. Первый пришёл, первый вышел.
Стек - FILO - структура. Первый пришёл, последний вышел. Используется для хранения локальных переменных (примитивные и ссылки на объекты ООП-типа) при вызове методов.
В java.util.collection есть две структуры, которые реализуют и очередь и стек одновременно: LinkedList(на основе списка) и ArrayDeque(на основе массива переменной длины).

    Что вам приходит в голову, когда вы слышите о новом поколении (young generation) в Java?
Этот термин относится к сборщику мусора. Он классифицирует объекты в памяти в том числе по времени создания. И проверяет возможность освобождения памяти начиная с недавно созданных.

    Есть два класса: A и B. Класс B должен информировать класс A когда случается некое важное событие. Какой design-pattern вы должны реализовать?
Такой design-pattern называется Слушатель. Слушателем является класс А, который может быть не один. Слушатели регистрируются в классе B. Доп. данные могут быть переданы либо по запросу, либо сразу с исходным сообщением.

    Какой модификатор доступа надо указать в классе, чтобы доступ к нему имели только классы из того же пакета?
Если в классе нет модификатора видимости, то, неявно, присутствует модификатор по-умолчанию, обеспечивающий пакетную видимость.

    Чем отличается статический внутренний класс от просто внутреннего класса?
Для доступа к статическому внутреннему классу не нужен экземпляр внешнего. К простому внутреннему можно обратиться только через экземпляр внешнего.

    можно ли обратиться к не-статической переменной из статического метода?
Можно, но только указав экземпляр класса, который можно передать в метод, например, в качестве параметра. Не-статическая переменная существует только в контексте экземпляра класса. Статический м-д существует в контексте самого класса. Его можно вызвать в том числе и из экземпляра класса. Не-статическая переменная может быть проинициализирована значением, возвращённым статическим методом.

    какие типы данных есть в Java?
1) примитивные(не-ООП): byte, short, int, long, float, double, char, boolean
2) ссылочные(ООП): Object, String, System, Integer(обёртка для int)

    Чем отличаются переопределение (Override) и перегрузка (Overload)
Переопределение -- м-д класса-потомка(не обязательно ближайшего) переопределяет м-д класса родителя. Сигнатура м-да сохраняется. При получении сообщения потомком выполняется м-д потомка.
Пергрузка -- В одном классе несколько одноимённых методов, но у всех разное количество и типы параметров, Т.е. разные сигнатуры.

    Что такое итератор?
Итератор используется для перебора элементов коллекций. Реализован в виде объекта, так как одномоментно их может быть несколько. Итератор -- объект, реализующий как минимум два метода hasNext() (возвращвет true, если ещё есть элементы) и next()(очередной элемент).

    Перечислите основные категории исключительных ситуаций
Исключительные ситуации используются для сигнализации о нештатной ситуации наверх по стеку вызовов методов. Каждый м-д может обработать ИС, может послать ИС дальше по стеку(не обязательно ту же ИС), а может и обработать и послать по стеку.
Неперхватываемые -- Run-time Exceptions и Errors
Перехватываемые -- все остальные
В System есть м-д позволяющий выполнить пользовательский код, при возникновении неперехватываемой ситуации.

    Какая разница между throw и throws?
throw - выбрасывание ИС
директива throws в описании метода указывает, что данный метод может выбросить Exception(если не одну, то перечисляются) Вызывающий код должен будет обработать ИС или передать выше по стеку.

    Зачем нужен блок finally?
Блок finaly в конструкции try/catch выполняется всегда. Если возникла ИС в блок finally используется, например, для освобождения монитора myLock.unlock(), для корректного закрытия сессии с БД, сетевой сессии.
    Что такое finalize?
Необязательный метод, который выполняется (но VM не гарантирует его выполнение) перед уничтожением объекта. 

    Перечислите все виды внутренних классов
анонимный -- на его экземпляр создаётся сразу при описании класса. За базу берётся какой-либо не анонимный. А в описании, как правило, переопределяются методы.
вложенный -- описывается внутри другого класса, может быть статическим
локальный -- описывается внутри метода

